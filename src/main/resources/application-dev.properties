
#数据源 交警车载默认数据库
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.url=jdbc:postgresql://192.168.3.202:5432/fklj?currentSchema=local-data
spring.datasource.url=jdbc:postgresql://111.42.38.118:5432/postgres?currentSchema=fklj
#spring.datasource.url=jdbc:postgresql://192.168.3.201:5432/dossier?currentSchema=dossier
spring.datasource.username=postgres
#spring.datasource.password=postgres
spring.datasource.password=root
spring.datasource.auto-commit=false
spring.datasource.rollback-on-return=true
spring.datasource.driver-class-name=org.postgresql.Driver

# 下面为连接池的补充设置，应用到上面所有数据源中  
# 初始化大小，最小，最大  
spring.datasource.initialSize=5  
spring.datasource.minIdle=5  
spring.datasource.maxActive=20  
# 配置获取连接等待超时的时间  
spring.datasource.maxWait=60000  
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒   
spring.datasource.timeBetweenEvictionRunsMillis=60000  
# 配置一个连接在池中最小生存的时间，单位是毫秒   
spring.datasource.minEvictableIdleTimeMillis=300000  
spring.datasource.validationQuery=SELECT 'x'  
spring.datasource.testWhileIdle=true  
spring.datasource.testOnBorrow=false  
spring.datasource.testOnReturn=false  
# 打开PSCache，并且指定每个连接上PSCache的大小   
spring.datasource.poolPreparedStatements=true 
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20  
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙   
spring.datasource.filters=stat,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录  
spring.datasource.connectionProperties=druid.stat.mergeSql\=false;druid.stat.slowSqlMillis\=5000  

# --多数据源   
#baqgl_ywzx,baqgl_rjfw,local，baqgl_ywzx,baqgl_rjfw
custom.datasource.names=local
custom.translation.files=translatecode.xls
custom.security.token=eyJqdGkiOiIxM2RhY2Q2MC1jNDhkLTQwZTgtYjE2Zi1jNzU0MDQzYjA0ZjkiLCJpYXQiOjE1MTU5OTE2NzAsInN1YiI6IjEwMSIsImlzcyI6IlNlY3VyaXR5IENlbnRlciIsImRlcGFydG1lbnQiOnsiaWQiOjEsInBhcmVudElkIjpudWxsLCJyZXNvdXJjZUlkIjpudWxsLCJkZXB0aCI6MSwiY29kZSI6IjQxMDAwMDAwMDAwMCIsIm5hbWUiOiLmsrPljZfnnIHlhazlronljoUiLCJwb2xpY2VDYXRlZ29yeSI6bnVsbCwic29ydCI6MCwic3RhdGUiOjEsIm9wdFRpbWUiOm51bGwsIm9wdElkIjpudWxsLCJvcHROYW1lIjpudWxsLCJ2aXNpYWJsZSI6MSwiY2hpbGRyZW5MaXN0IjpudWxsfSwiZ292ZXJubWVudCI6W3siaWQiOjEsInBhcmVudElkIjpudWxsLCJyZXNvdXJjZUlkIjpudWxsLCJkZXB0aCI6MSwiY29kZSI6IjQxMDAwMDAwMDAwMCIsIm5hbWUiOiLmsrPljZfnnIHlhazlronljoUiLCJwb2xpY2VDYXRlZ29yeSI6bnVsbCwic29ydCI6MCwic3RhdGUiOjEsIm9wdFRpbWUiOm51bGwsIm9wdElkIjpudWxsLCJvcHROYW1lIjpudWxsLCJ2aXNpYWJsZSI6MSwiY2hpbGRyZW5MaXN0IjpudWxsfSx7ImlkIjoyLCJwYXJlbnRJZCI6bnVsbCwicmVzb3VyY2VJZCI6bnVsbCwiZGVwdGgiOjIsImNvZGUiOiI0MTAzMDAwMDAwMDAiLCJuYW1lIjoi5rSb6Ziz5biC5YWs5a6J5bGAIiwicG9saWNlQ2F0ZWdvcnkiOm51bGwsInNvcnQiOjAsInN0YXRlIjoxLCJvcHRUaW1lIjpudWxsLCJvcHRJZCI6bnVsbCwib3B0TmFtZSI6bnVsbCwidmlzaWFibGUiOjEsImNoaWxkcmVuTGlzdCI6bnVsbH1dLCJpZCI6MTAxLCJuYW1lIjoi5p-05paH6Im6IiwiZXhwIjoxNTE4MDY1MjcwfQ


#--------测试数据源二----------------------------
#custom.datasource.test2.type=com.alibaba.druid.pool.DruidDataSource
#custom.datasource.test2.url=jdbc:postgresql://172.19.4.4:5432/zzhtest?currentSchema=test2
#custom.datasource.test2.username=zfgfh
#custom.datasource.test2.password=zfgfh
#custom.datasource.test2.auto-commit=false
#custom.datasource.test2.rollback-on-return=true
#custom.datasource.test2.driver-class-name=org.postgresql.Driver


#
### ---oralce数据源 --------------------------
#custom.datasource.local.type=com.alibaba.druid.pool.DruidDataSource
#custom.datasource.local.url=jdbc:oracle:thin:@192.168.3.222:1521/xe
#custom.datasource.local.username:SJZYZJK
#custom.datasource.local.password:SJZYZJK
#custom.datasource.local.auto-commit=false
#custom.datasource.local.rollback-on-return=true
#custom.datasource.local.driver-class-name=oracle.jdbc.driver.OracleDriver
#
##运维中心
#custom.datasource.baqgl_ywzx.type=com.alibaba.druid.pool.DruidDataSource
#custom.datasource.baqgl_ywzx.url=jdbc:postgresql://172.19.4.4:5432/zfgfh?currentSchema=baqgl_ywzx
#custom.datasource.baqgl_ywzx.username=zfgfh
#custom.datasource.baqgl_ywzx.password=zfgfh
#custom.datasource.baqgl_ywzx.auto-commit=false
#custom.datasource.baqgl_ywzx.rollback-on-return=true
#custom.datasource.baqgl_ywzx.driver-class-name=org.postgresql.Driver
#
##软件服务
#custom.datasource.baqgl_rjfw.type=com.alibaba.druid.pool.DruidDataSource
#custom.datasource.baqgl_rjfw.url=jdbc:postgresql://172.19.4.4:5432/zfgfh?currentSchema=baqgl_rjfw
#custom.datasource.baqgl_rjfw.username=zfgfh
#custom.datasource.baqgl_rjfw.password=zfgfh
#custom.datasource.baqgl_rjfw.auto-commit=false
#custom.datasource.baqgl_rjfw.rollback-on-return=true
#custom.datasource.baqgl_rjfw.driver-class-name=org.postgresql.Driver
#

#缓存 set type:none to diable cache
spring.cache.type=redis
spring.redis.database=0
spring.redis.host=192.168.3.202
#spring.redis.host=redis
spring.redis.port=6379
spring.redis.password=redis
spring.redis.default-expiration=100
#最大空闲数  
redis.maxIdle=300  
#连接池的最大数据库连接数。设为0表示无限制,如果是jedis 2.4以后用redis.maxTotal  
#redis.maxActive=600  
#控制一个pool可分配多少个jedis实例,用来替换上面的redis.maxActive,如果是jedis 2.4以后用该属性  
redis.maxTotal=1000  
#最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。  
redis.maxWaitMillis=1000  
#连接的最小空闲时间 默认1800000毫秒(30分钟)  
redis.minEvictableIdleTimeMillis=300000  
#每次释放连接的最大数目,默认3  
redis.numTestsPerEvictionRun=1024  
#逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1  
redis.timeBetweenEvictionRunsMillis=30000  
#是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个  
redis.testOnBorrow=true  
#在空闲时检查有效性, 默认false  
redis.testWhileIdle=true  



#图片服务器
custom.img.serviceIp=192.168.41.249
#custom.img.serviceIp=192.168.41.249
custom.img.downlLoadUrl=http\://192.168.41.249\:9000/img/
custom.img.upLoadPort=9333
custom.img.tempDir=/tmp/
#文件服务器
#custom.file.downlLoadPath=http\://jzgl-data-service\:7900/
#custom.file.upLoadPath=/opt
custom.file.downlLoadPath=http\://172.19.12.102\:7200/
custom.file.upLoadPath=D://app/


#
##MQTT连接
#MQTT是否使用
mqtt.enable=1
mqtt.serverUri=tcp://139.199.107.156:1883
#mqtt.serverUri=tcp://emq2345:1883
mqtt.username=czp
mqtt.password=czp
mqtt.qos=1
mqtt.completionTimeout=5000
#md5(hylink)
mqtt.customer.clientId=59b85e72931762c76a71063e3f5ab414_customer
mqtt.producer.clientId=59b85e72931762c76a71063e3f5ab414_producer
#mqtt.customer.clientId=33f67d4d65284e3e9e1c623e959dcaa9_customer
#mqtt.producer.clientId=33f67d4d65284e3e9e1c623e959dcaa9_producer
# 主题
mqtt.topic=s

#硬件服务平台-运维
#hlk-ywzx-data-service 
#ywzx.serverUri=http://ywzx-service:7400
#ywzx.serverUri=http://192.168.41.249:7400
ywzx.serverUri=http://172.17.224.3:7400

#ywzx.serverUri=http://172.19.4.4:7400

#安全中心
#hlk-ywzx-data-service 
#aqzx.serverUri=http://security-service:8080
aqzx.serverUri=http://192.168.41.249:8100
#aqzx.serverUri=http://192.168.3.202:8080

#
##软件服务平台
##hlk-zfgfh-data-service 
#zfgfh.serverUri=http://172.19.12.249:7600
zfgfh.serverUri=http://192.168.3.4:7600

##数据服务中间件
#local.serverUri=http://local-data-service:7100
#local.serverUri=http://192.168.3.102:7100
local.serverUri=http://192.168.3.23:7100

#总队接口平台系统
corps.serverUri=

#定时任务开关
scheduled.enable=false
#请求运维得到相关设备
#ywxgsb.service=http://192.168.3.202:7400
#ywxgsb.service=http://192.168.3.202:7400

#应用模式  900901生产环境  900902测试环境
custom.developmode=900902

custom.config.source=DaQing-Data





